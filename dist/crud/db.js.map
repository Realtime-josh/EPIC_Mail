{"version":3,"sources":["../../server/crud/db.js"],"names":["dotenv","config","connectionString","usersTable","messageTable","getEmail","email","Promise","resolve","reject","client","Client","connect","then","sql","params","query","result","rows","end","catch","e","getMessageIds","receiverid","senderid","insertUsers","firstName","lastName","password","token","insertMessage","receiverId","senderId","subject","message","status","createdOn","clearTable","tableName","rowCount"],"mappings":"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","file":"db.js","sourcesContent":["import { Client } from 'pg';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n// let connectionString = process.env.DATABASE_URL;\r\n// Database connection String\r\nlet connectionString = \"postgres://Frank:jfrank@127.0.0.1:5432/epicmail\";\r\n\r\nconst usersTable = 'users';\r\nconst messageTable = 'message'\r\n\r\n\r\nconst getEmail = (email) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const client = new Client(connectionString);\r\n       client.connect()\r\n       .then(()=>{\r\n           const sql = `SELECT * FROM ${usersTable} WHERE email=$1`;\r\n           const params = [email];\r\n           client.query(sql,params)\r\n           .then((result)=>{\r\n                resolve(result.rows);\r\n               client.end();\r\n           }).catch((e)=>{\r\n            reject(e);\r\n           })\r\n       }).catch((e)=>{\r\n        reject(e);\r\n       })\r\n    })\r\n  }\r\n\r\n  const getMessageIds = (receiverid,senderid) =>{\r\n    return new Promise((resolve,reject)=>{\r\n      const client = new Client(connectionString);\r\n      client.connect()\r\n      .then(()=>{\r\n         const sql = `SELECT * FROM ${messageTable} \r\n         WHERE (receiverid=$1 AND senderid=$2) OR (receiverid=$2 AND senderid=$1)`\r\n         const params = [receiverid,senderid]\r\n         client.query(sql,params)\r\n         .then((result)=>{\r\n             resolve(result.rows)\r\n             client.end();\r\n         }).catch((e)=>{\r\n           reject(e)\r\n         })\r\n      }).catch((e)=>{\r\n        reject(e)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  const insertUsers = (firstName, lastName, email, password, token) => {\r\n    return new Promise((resolve,reject)=>{\r\n      const client = new Client(connectionString);\r\n      client.connect()\r\n      .then(()=>{\r\n        const sql = `INSERT INTO ${usersTable}(firstname,lastname,email,password,token)VALUES($1,$2,$3,$4,$5)`;\r\n        const params = [firstName,lastName,email,password,token];\r\n        client.query(sql,params)\r\n        .then((result)=>{\r\n             resolve(result.rows);\r\n             client.end();\r\n        }).catch((e)=>{\r\n          reject(e)\r\n        })\r\n      }).catch((e)=>{\r\n        reject(e);\r\n      })\r\n    })\r\n  }\r\n\r\n  const insertMessage = (receiverId, senderId, subject, message, status, createdOn) => {\r\n    return new Promise((resolve,reject)=>{\r\n      const client = new Client(connectionString);\r\n      client.connect()\r\n      .then(()=>{\r\n        const sql = `INSERT INTO ${messageTable}\r\n        (receiverid,senderid,subject,message,status,createdon)VALUES($1,$2,$3,$4,$5,$6)`;\r\n        const params = [receiverId,senderId,subject,message,status,createdOn];\r\n        client.query(sql,params)\r\n        .then((result)=>{\r\n             resolve(result.rows);\r\n             client.end();\r\n        }).catch((e)=>{\r\n          reject(e)\r\n        })\r\n      }).catch((e)=>{\r\n        reject(e);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  const clearTable = tableName => new Promise((resolve, reject) => {\r\n  const client = new Client(connectionString);\r\n  client.connect()\r\n    .then(() => {\r\n      let sql = `DELETE FROM ${tableName};`;\r\n      if (tableName === usersTable) {\r\n        sql = `DELETE FROM ${tableName} WHERE user_level != 2;`;\r\n      }\r\n      client.query(sql)\r\n        .then((result) => {\r\n          resolve(result.rowCount);\r\n          client.end();\r\n        })\r\n        .catch(e => reject(e));\r\n    }).catch(e => reject(e));\r\n});\r\n\r\n\r\n\r\n\r\nexport{getEmail,insertUsers, getMessageIds, insertMessage}\r\n"]}