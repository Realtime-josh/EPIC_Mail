{"version":3,"sources":["../../server/test/app.test.js"],"names":["describe","it","done","app","get","set","expect","then","response","body","message","toContain","error","post","send","email","firstName","lastName","password","end","err","res","status","toBe","senderId","receiverId","subject"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,SAAS,OAAT,EAAkB,YAAM;AACtBC,KAAG,qCAAH,EAA0C,UAACC,IAAD,EAAU;AAClD,6BAAQC,aAAR,EACGC,GADH,CACO,GADP,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,MAHH,CAGU,GAHV,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,4BAAOA,SAASC,IAAT,CAAcC,OAArB,EAA8BC,SAA9B,CAAwC,SAAxC;AACD,KANH;AAOAT;AACD,GATD;AAUD,CAXD;;AAaAF,SAAS,GAAT,EAAc,YAAM;AAClBC,KAAG,mCAAH,EAAwC,UAACC,IAAD,EAAU;AAChD,6BAAQC,aAAR,EACGC,GADH,CACO,UADP,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,MAHH,CAGU,GAHV,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,4BAAOA,SAASC,IAAT,CAAcG,KAArB,EAA4BD,SAA5B,CAAsC,SAAtC;AACD,KANH;AAOAT;AACD,GATD;AAUD,CAXD;;AAcAF,SAAS,oBAAT,EAA+B,YAAM;AACnCC,KAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9C,6BAAQC,aAAR,EACGU,IADH,CACQ,qBADR,EAEGC,IAFH,CAEQ;AACJC,aAAO,uBADH;AAEJC,iBAAW,OAFP;AAGJC,gBAAU,QAHN;AAIJC,gBAAU;AAJN,KAFR,EAQGb,GARH,CAQO,QARP,EAQiB,kBARjB,EASGC,MATH,CASU,GATV,EAUGA,MAVH,CAUU,cAVV,EAU0B,MAV1B,EAWGa,GAXH,CAWO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,UAAID,GAAJ,EAASlB,KAAKkB,GAAL;AACT,4BAAOC,IAAIZ,IAAJ,CAASC,OAAhB,EAAyBC,SAAzB,CAAmC,2BAAnC;AACA,4BAAOU,IAAIZ,IAAJ,CAASa,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACD,KAfH;AAgBArB;AACD,GAlBD;AAmBD,CApBD;;AAsBAF,SAAS,yBAAT,EAAoC,YAAM;AACxCC,KAAG,wCAAH,EAA6C,UAACC,IAAD,EAAU;AACrD,6BAAQC,aAAR,EACGU,IADH,CACQ,0BADR,EAEGC,IAFH,CAEQ;AACJU,gBAAU,CADN;AAEJC,kBAAY,CAFR;AAGJC,eAAS,YAHL;AAIJhB,eAAS,SAJL;AAKJY,cAAQ;AALJ,KAFR,EASGjB,GATH,CASO,QATP,EASiB,kBATjB,EAUGC,MAVH,CAUU,GAVV,EAWGA,MAXH,CAWU,cAXV,EAW0B,MAX1B,EAYGa,GAZH,CAYO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,UAAID,GAAJ,EAASlB,KAAKkB,GAAL;AACT,4BAAOC,IAAIZ,IAAJ,CAASC,OAAhB,EAAyBC,SAAzB,CAAmC,2BAAnC;AACA,4BAAOU,IAAIZ,IAAJ,CAASa,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACD,KAhBH;AAiBArB;AACD,GAnBD;AAoBD,CArBD","file":"app.test.js","sourcesContent":["import expect from 'expect';\r\nimport request from 'supertest';\r\nimport app from '../app';\r\n\r\ndescribe('GET /', () => {\r\n  it('should respond with welcome message', (done) => {\r\n    request(app)\r\n      .get('/')\r\n      .set('Accept', 'application/json')\r\n      .expect(200)\r\n      .then((response) => {\r\n        expect(response.body.message).toContain('Welcome');\r\n      });\r\n    done();\r\n  });\r\n});\r\n\r\ndescribe('*', () => {\r\n  it('should respond with error message', (done) => {\r\n    request(app)\r\n      .get('/noroute')\r\n      .set('Accept', 'application/json')\r\n      .expect(404)\r\n      .then((response) => {\r\n        expect(response.body.error).toContain('Invalid');\r\n      });\r\n    done();\r\n  });\r\n});\r\n\r\n\r\ndescribe('POST /signup route', () => {\r\n  it('should successfully create user', (done) => {\r\n    request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send({\r\n        email: 'kellyfeller@gmail.com',\r\n        firstName: 'Kelly',\r\n        lastName: 'Feller',\r\n        password: 'jddhehndhr',\r\n      })\r\n      .set('Accept', 'application/json')\r\n      .expect(200)\r\n      .expect('Content-type', /json/)\r\n      .end((err, res) => {\r\n        if (err) done(err);\r\n        expect(res.body.message).toContain('User successfully created');\r\n        expect(res.body.status).toBe(200);\r\n      });\r\n    done();\r\n  });\r\n});\r\n\r\ndescribe('POST /sendmessage route', () => {\r\n  it('should successfully send email to user', (done) => {\r\n    request(app)\r\n      .post('/api/v1/message/messages')\r\n      .send({\r\n        senderId: 1,\r\n        receiverId: 2,\r\n        subject: 'Hello Dear',\r\n        message: 'bluseal',\r\n        status: 'read',\r\n      })\r\n      .set('Accept', 'application/json')\r\n      .expect(200)\r\n      .expect('Content-type', /json/)\r\n      .end((err, res) => {\r\n        if (err) done(err);\r\n        expect(res.body.message).toContain('Message successfully sent');\r\n        expect(res.body.status).toBe(200);\r\n      });\r\n    done();\r\n  });\r\n});\r\n"]}