{"version":3,"sources":["../../server/routes/message.js"],"names":["messageRouter","express","Router","post","createMessage","req","res","messageDetails","Message","messages","push","status","send","message","get","id","params","verifyUser","user","users","filter","result","userId","parseInt","length","receivedMessages","receiverId","getName","usersList","fullName","receivedmessages","sentMessages","senderId","sentmessages","unreadMessages","unreadmessages","getEmail","email","delete","userMessageId","query","messageToDelete","getSpecificMail","messageId","getSpecificMailId","splice","indexOf"],"mappings":"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","file":"message.js","sourcesContent":["import express from \"express\";\r\nimport {createMessage} from \"../helpers/validators\";\r\nimport {Message} from \"../models/messages\";\r\nimport {usersList} from \"../models/users\";\r\nimport {user} from \"../models/users\";\r\nimport {sendResponse} from \"../helpers/responses\";\r\n\r\nconst messageRouter = express.Router();\r\n\r\n\r\n\r\n\r\n\r\nmessageRouter.post(\"/messages\",createMessage,(req,res)=>{\r\n      const {messageDetails} = req;\r\n      Message.messages.push(messageDetails);\r\n      res.status(200).send({\r\n               status :200,\r\n               message : \"Message successfully sent\",\r\n               messageDetails : messageDetails\r\n      });   \r\n});\r\n\r\n\r\n\r\nmessageRouter.get(\"/messages\", (req,res)=>{\r\n      res.status(200).send({\r\n          status :200,\r\n          messageDetails : Message.messages\r\n      });\r\n});\r\n\r\n\r\nmessageRouter.get(\"/messages/:id\", (req,res)=>{\r\n\tconst {id} = req.params;\r\n    const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n    if(verifyUser.length > 0){\r\n            const receivedMessages = Message.messages.filter((result)=>{\r\n                                         return result.receiverId === parseInt(id);\r\n                                     });\r\n\tif(receivedMessages.length > 0){\r\n\t\tconst getName = usersList.get(parseInt(id));\r\n     \r\n     res.status(200).send({\r\n        status : 200,\r\n        message : `All received messages for ${getName.fullName}`,\r\n        receivedmessages : receivedMessages\r\n     });\r\n }else{\r\n          sendResponse(res,200,\"No messages found for user\",null);\r\n    }\r\n    }else{\r\n           sendResponse(res,404,null,\"Not Found\");\r\n    }\r\n                 \r\n});\r\n\r\n\r\nmessageRouter.get(\"/messages/sent/:id\", (req,res)=>{\r\n     const {id} = req.params;\r\n     const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n     if(verifyUser.length > 0){\r\n            const sentMessages = Message.messages.filter((result)=>{\r\n                                         return result.senderId === parseInt(id);\r\n                                     });\r\n            if(sentMessages.length > 0){\r\n                  const getName = usersList.get(parseInt(id));\r\n                   res.status(200).send({\r\n                   status : 200,\r\n                   message : `All Sent messages for ${getName.fullName}`,\r\n                   sentmessages : sentMessages\r\n               });\r\n            }else{\r\n                    sendResponse(res,200,\"No messages found for user\",null);\r\n               }\r\n     }else{\r\n               sendResponse(res,404,null,\"Not Found\");\r\n         }\r\n \r\n});\r\n\r\n\r\nmessageRouter.get(\"/messages/unread/:id\", (req,res)=>{\r\n        const {id} = req.params;\r\n        const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n      if(verifyUser.length > 0){\r\n            const unreadMessages = Message.messages.filter((result)=>{\r\n                return result.receiverId === parseInt(id) && result.status === \"unread\";\r\n            });\r\n            if(unreadMessages.length > 0){\r\n                  const getName = usersList.get(parseInt(id));\r\n                   res.status(200).send({\r\n                   status : 200,\r\n                   message : `All unread messages for ${getName.fullName}`,\r\n                   unreadmessages : unreadMessages\r\n               });\r\n            }else{\r\n                    sendResponse(res,200,\"No messages found for user\",null);\r\n               }\r\n      }else{\r\n         sendResponse(res,404,null,\"Not Found\");\r\n      }\r\n\r\n});\r\n\r\n\r\n\r\nmessageRouter.get(\"/email/:id\", (req,res)=>{\r\n      const {id} = req.params;\r\n      const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n       if(verifyUser.length > 0){\r\n             const  getEmail = verifyUser[0].email;\r\n              res.status(200).send({\r\n                   status : 200,\r\n                   message : \"Email found\",\r\n                   email : getEmail\r\n              });\r\n       }else{\r\n          sendResponse(res,404,null,\"Not Found\");\r\n       }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nmessageRouter.delete(\"/messages/:id\", (req,res)=>{\r\n       const {userMessageId} = req.query;\r\n       const {id} = req.params;\r\n       const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n        if(verifyUser.length > 0){\r\n\r\n              const messageToDelete = Message.messages.filter((result)=>{\r\n                       return result.receiverId === parseInt(id);\r\n              });\r\n\r\n              if(messageToDelete.length > 0){\r\n                      const getSpecificMail = messageToDelete.filter((result)=>{\r\n                             return result.messageId === parseInt(userMessageId);\r\n                      });\r\n\r\n                      if(getSpecificMail.length > 0){\r\n                            const getSpecificMailId = getSpecificMail[0];\r\n                            Message.messages.splice(Message.messages.indexOf(getSpecificMailId),1);\r\n                            res.status(200).send({\r\n                                status :200,\r\n                                message : \"Email successfully deleted\",\r\n                                messageDetails : getSpecificMail\r\n                            });\r\n                      }else{\r\n                         sendResponse(res,200,\"no email to be deleted\", null);\r\n                      }\r\n\r\n                      \r\n              }else{\r\n                 sendResponse(res,200,\"no email found\", null);\r\n              }\r\n\r\n        }else{\r\n           sendResponse(res,404,null,\"Not Found\");\r\n        }\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n\tmessageRouter\r\n};"]}