{"version":3,"sources":["../../server/routes/message.js"],"names":["messageRouter","express","Router","messageRouterv2","post","createMessage","req","res","messageDetails","Message","messages","push","status","send","message","get","id","params","verifyUser","user","users","filter","result","userId","parseInt","length","receivedMessages","receiverId","getName","usersList","fullName","receivedmessages","sentMessages","senderId","sentmessages","unreadMessages","unreadmessages","getEmail","email","delete","query","messageToDelete","getSpecificMail","messageId","getSpecificMailId","splice","indexOf","messageToGet","senderItem","verifyToken","body","userDetails","receiverEmail","subject","userid","then","createdOn","Date","catch","e","firstname","unReadMessages","data"],"mappings":"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","file":"message.js","sourcesContent":["/* eslint-disable radix */\nimport express from 'express';\nimport { createMessage,senderItem, verifyToken } from '../helpers/validators';\nimport { sendResponse } from '../helpers/responses';\nimport { Message } from '../models/messages';\nimport { usersList, user } from '../models/users';\nimport { getUserEmail, getMessagesById, insertMessage, getMessagesByUnread } from '../crud/db'\n\n\nconst messageRouter = express.Router();\nconst messageRouterv2 = express.Router();\n\nmessageRouter.post('/messages', createMessage, (req, res) => {\n  const { messageDetails } = req;\n  Message.messages.push(messageDetails);\n  res.status(200).send({\n    status: 200,\n    message: 'Message successfully sent',\n    messageDetails,\n  });\n});\n\n\nmessageRouter.get('/messages', (req, res) => {\n  res.status(200).send({\n    status: 200,\n    messageDetails: Message.messages,\n  });\n});\n\n\nmessageRouter.get('/messages/:id', (req, res) => {\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(id));\n\n  if (verifyUser.length > 0) {\n    const receivedMessages = Message.messages.filter(result => result.receiverId === parseInt(id));\n    if (receivedMessages.length > 0) {\n      const getName = usersList.get(parseInt(id));\n      res.status(200).send({\n        status: 200,\n        message: `All received messages for ${getName.fullName}`,\n        receivedmessages: receivedMessages,\n      });\n    } else {\n      sendResponse(res, 200, 'No messages found for user', null);\n    }\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouter.get('/messages/sent/:id', (req, res) => {\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(id, 10));\n\n  if (verifyUser.length > 0) {\n    const sentMessages = Message.messages.filter(result => result.senderId === parseInt(id, 10));\n    if (sentMessages.length > 0) {\n      const getName = usersList.get(parseInt(id, 10));\n      res.status(200).send({\n        status: 200,\n        message: `All Sent messages for ${getName.fullName}`,\n        sentmessages: sentMessages,\n      });\n    } else {\n      sendResponse(res, 200, 'No messages found for user', null);\n    }\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouter.get('/messages/unread/:id', (req, res) => {\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(id));\n\n  if (verifyUser.length > 0) {\n    const unreadMessages = Message.messages.filter(result => result.receiverId === parseInt(id) && result.status === 'unread');\n    if (unreadMessages.length > 0) {\n      const getName = usersList.get(parseInt(id));\n      res.status(200).send({\n        status: 200,\n        message: `All unread messages for ${getName.fullName}`,\n        unreadmessages: unreadMessages,\n      });\n    } else {\n      sendResponse(res, 200, 'No messages found for user', null);\n    }\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouter.get('/email/:id', (req, res) => {\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(id));\n  if (verifyUser.length > 0) {\n    const getEmail = verifyUser[0].email;\n    res.status(200).send({\n      status: 200,\n      message: 'Email found',\n      email: getEmail,\n    });\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouter.delete('/messages/:id', (req, res) => {\n  const { userId } = req.query;\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(userId));\n  if (verifyUser.length > 0) {\n    const messageToDelete = Message.messages.filter(result => result.receiverId === parseInt(userId));\n\n    if (messageToDelete.length > 0) {\n      const getSpecificMail = messageToDelete.filter(result => result.messageId === parseInt(id));\n\n\n      if (getSpecificMail.length > 0) {\n        const getSpecificMailId = getSpecificMail[0];\n        Message.messages.splice(Message.messages.indexOf(getSpecificMailId), 1);\n        res.status(200).send({\n          status: 200,\n          message: 'Email successfully deleted',\n          messageDetails: getSpecificMail,\n        });\n      } else {\n        sendResponse(res, 200, 'no email to be deleted', null);\n      }\n    } else {\n      sendResponse(res, 200, 'no email found', null);\n    }\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouter.get('/messages/specificmail/:id', (req, res) => {\n  const { userId } = req.query;\n  const { id } = req.params;\n  const verifyUser = user.users.filter(result => result.userId === parseInt(userId));\n\n  if (verifyUser.length > 0) {\n    const messageToGet = Message.messages.filter(result => result.receiverId === parseInt(userId));\n    if (messageToGet.length > 0) {\n      const getSpecificMail = messageToGet.filter(result => result.messageId === parseInt(id));\n\n      if (getSpecificMail.length > 0) {\n        const getSpecificMailId = getSpecificMail[0];\n        res.status(200).send({\n          status: 200,\n          message: 'Email successfully fetched',\n          messageDetails: getSpecificMailId,\n        });\n      } else {\n        sendResponse(res, 200, 'Email successfully fetched', null);\n      }\n    } else {\n      sendResponse(res, 200, 'no email found', null);\n    }\n  } else {\n    sendResponse(res, 404, null, 'Not Found');\n  }\n});\n\n\nmessageRouterv2.post('/messages',senderItem, verifyToken, (req,res)=>{\n     const {userDetails,receiverEmail, subject, message, status} = req.body\n     const {receiverId} = req;\n     const senderId = userDetails[0].userid;\n     getUserEmail(receiverEmail)\n     .then((result)=>{\n      if(result.length > 0){\n        const receiverId = result[0].userid;\n        const createdOn = new Date();\n        insertMessage(receiverId,senderId,subject,message,status,createdOn)\n        sendResponse(res,200,'message sent', null)\n      }else{\n        sendResponse(res,400,null, 'Could not retrieve email');\n      }\n     }).catch((e)=>{\n       sendResponse(res,400,null, 'something went wrong'); \n     })\n     \n});\n\nmessageRouterv2.get('/messages', verifyToken, (req,res)=>{\n   const {userDetails} = req.body\n   const userId = userDetails[0].userid\n   getMessagesById(userId)\n   .then((result)=>{\n      if(result.length > 0){\n         const messageDetails = result\n         sendResponse(res,200,messageDetails,null)\n      }else{\n        res.status(404).send({\n        status,\n        message: `No messages found for ${userDetails[0].firstname}`,\n      })\n      }\n   }).catch((e)=>{\n     sendResponse(res,400, null, 'unable to fetch user data');\n   })\n\n})\n\n\nmessageRouterv2.get('/messages/unread', verifyToken, (req,res)=>{\n   const {userDetails} = req.body\n   const userId = userDetails[0].userid\n   getMessagesByUnread(userId)\n   .then((result)=>{\n      if(result.length > 0){\n         const unReadMessages = result.filter((data)=>{\n           return data.status === \"unread\";\n         })\n         sendResponse(res,200,unReadMessages,null)\n      }else{\n        res.status(404).send({\n        status,\n        message: `No messages found for ${userDetails[0].firstname}`,\n      })\n      }\n   }).catch((e)=>{\n     sendResponse(res,400, null, 'unable to fetch user data');\n   })\n\n})\n\n\n\n\n\n\nexport {\n  messageRouter,\n  messageRouterv2\n};\n"]}