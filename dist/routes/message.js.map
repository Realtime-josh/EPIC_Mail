{"version":3,"sources":["../../server/routes/message.js"],"names":["messageRouter","express","Router","post","createMessage","req","res","messageDetails","Message","messages","push","status","send","message","get","id","params","verifyUser","user","users","filter","result","userId","parseInt","length","receivedMessages","receiverId","getName","usersList","fullName","receivedmessages","sentMessages","senderId","sentmessages","unreadMessages","unreadmessages","getEmail","email","delete","userMessageId","query","messageToDelete","getSpecificMail","messageId","getSpecificMailId","splice","indexOf"],"mappings":"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","file":"message.js","sourcesContent":["import express from \"express\";\r\nimport {createMessage} from \"../helpers/validators\";\r\nimport {Message} from \"../models/messages\";\r\nimport {usersList} from \"../models/users\";\r\nimport {user} from \"../models/users\";\r\nimport {sendResponse} from \"../helpers/responses\";\r\n\r\nconst messageRouter = express.Router();\r\n\r\n\r\n\r\n\r\n\r\nmessageRouter.post(\"/sendmessage\",createMessage,(req,res)=>{\r\n      const {messageDetails} = req;\r\n      Message.messages.push(messageDetails);\r\n      res.status(200).send({\r\n               status :200,\r\n               message : \"Message successfully sent\",\r\n               messageDetails : messageDetails\r\n      });   \r\n});\r\n\r\n\r\n\r\nmessageRouter.get(\"/allreceivedmails\", (req,res)=>{\r\n      res.status(200).send({\r\n          status :200,\r\n          messageDetails : Message.messages\r\n      });\r\n});\r\n\r\n\r\nmessageRouter.get(\"/receivedmessages/:id\", (req,res)=>{\r\n\tconst {id} = req.params;\r\n    const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id)\r\n    });\r\n\r\n    if(verifyUser.length > 0){\r\n            const receivedMessages = Message.messages.filter((result)=>{\r\n                                         return result.receiverId === parseInt(id);\r\n                                     });\r\n\tif(receivedMessages.length > 0){\r\n\t\tconst getName = usersList.get(parseInt(id));\r\n     \r\n     res.status(200).send({\r\n        status : 200,\r\n        message : `All received messages for ${getName.fullName}`,\r\n        receivedmessages : receivedMessages\r\n     });\r\n }else{\r\n          sendResponse(res,200,\"No messages found for user\",null);\r\n    }\r\n    }else{\r\n           sendResponse(res,404,null,\"Not Found\");\r\n    }\r\n                 \r\n});\r\n\r\n\r\nmessageRouter.get(\"/sentemails/:id\", (req,res)=>{\r\n     const {id} = req.params;\r\n     const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n     if(verifyUser.length > 0){\r\n            const sentMessages = Message.messages.filter((result)=>{\r\n                                         return result.senderId === parseInt(id);\r\n                                     });\r\n            if(sentMessages.length > 0){\r\n                  const getName = usersList.get(parseInt(id));\r\n                   res.status(200).send({\r\n                   status : 200,\r\n                   message : `All Sent messages for ${getName.fullName}`,\r\n                   sentmessages : sentMessages\r\n               });\r\n            }else{\r\n                    sendResponse(res,200,\"No messages found for user\",null);\r\n               }\r\n     }else{\r\n               sendResponse(res,404,null,\"Not Found\");\r\n         }\r\n \r\n});\r\n\r\n\r\nmessageRouter.get(\"/unreadmails/:id\", (req,res)=>{\r\n        const {id} = req.params;\r\n        const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n      if(verifyUser.length > 0){\r\n            const unreadMessages = Message.messages.filter((result)=>{\r\n                                         return result.receiverId === parseInt(id) && result.status === \"unread\";\r\n                                     });\r\n            if(unreadMessages.length > 0){\r\n                  const getName = usersList.get(parseInt(id));\r\n                   res.status(200).send({\r\n                   status : 200,\r\n                   message : `All unread messages for ${getName.fullName}`,\r\n                   unreadmessages : unreadMessages\r\n               });\r\n            }else{\r\n                    sendResponse(res,200,\"No messages found for user\",null);\r\n               }\r\n      }else{\r\n         sendResponse(res,404,null,\"Not Found\");\r\n      }\r\n\r\n});\r\n\r\n\r\n\r\nmessageRouter.get(\"/email/:id\", (req,res)=>{\r\n      const {id} = req.params;\r\n      const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n       if(verifyUser.length > 0){\r\n             const  getEmail = verifyUser[0].email;\r\n              res.status(200).send({\r\n                   status : 200,\r\n                   message : \"Email found\",\r\n                   email : getEmail\r\n              });\r\n       }else{\r\n          sendResponse(res,404,null,\"Not Found\");\r\n       }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nmessageRouter.delete(\"/email/:id\", (req,res)=>{\r\n       const {userMessageId} = req.query;\r\n       const {id} = req.params;\r\n       const verifyUser = user.users.filter((result)=>{\r\n               return result.userId === parseInt(id);\r\n    });\r\n\r\n        if(verifyUser.length > 0){\r\n\r\n              const messageToDelete = Message.messages.filter((result)=>{\r\n                       return result.receiverId === parseInt(id);\r\n              });\r\n\r\n              if(messageToDelete.length > 0){\r\n                      const getSpecificMail = messageToDelete.filter((result)=>{\r\n                             return result.messageId === parseInt(userMessageId);\r\n                      });\r\n\r\n                      if(getSpecificMail.length > 0){\r\n                            const getSpecificMailId = getSpecificMail[0];\r\n                            Message.messages.splice(Message.messages.indexOf(getSpecificMailId),1);\r\n                            res.status(200).send({\r\n                                status :200,\r\n                                message : \"Email successfully deleted\",\r\n                                messageDetails : getSpecificMail\r\n                            });\r\n                      }else{\r\n                         sendResponse(res,200,\"no email to be deleted\", null);\r\n                      }\r\n\r\n                      \r\n              }else{\r\n                 sendResponse(res,200,\"no email found\", null);\r\n              }\r\n\r\n        }else{\r\n           sendResponse(res,404,null,\"Not Found\");\r\n        }\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n\tmessageRouter\r\n};"]}