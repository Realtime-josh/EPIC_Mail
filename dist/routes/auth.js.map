{"version":3,"sources":["../../server/routes/auth.js"],"names":["authRouter","express","Router","authRouterv2","post","validateUserEntry","req","res","contactItem","user","users","push","status","send","message","validateUserSignIn","accountDetails","UserDetails","validateUserEntryy","token","validateUserSignInn","verifyToken","payload","jwt","sign","process","env","SECRET_KEY","header"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,EAAnB;AACA,IAAMC,eAAeF,kBAAQC,MAAR,EAArB;;AAGAF,WAAWI,IAAX,CAAgB,SAAhB,EAA2BC,6BAA3B,EAA8C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MAClDC,WADkD,GAClCF,GADkC,CAClDE,WADkD;;AAE1DC,cAAKC,KAAL,CAAWC,IAAX,CAAgBH,WAAhB;AACAD,MAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,GADW;AAEnBE,aAAS,2BAFU;AAGnBN;AAHmB,GAArB;AAKD,CARD;;AAUAR,WAAWI,IAAX,CAAgB,QAAhB,EAA0BW,8BAA1B,EAA8C,UAACT,GAAD,EAAMC,GAAN,EAAc;AAAA,MAClDS,cADkD,GAC/BV,GAD+B,CAClDU,cADkD;;AAE1DT,MAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,GADW;AAEnBE,aAAS,wBAFU;AAGnBG,iBAAaD;AAHM,GAArB;AAKD,CAPD;;AAUAb,aAAaC,IAAb,CAAkB,SAAlB,EAA6Bc,8BAA7B,EAAiD,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAAA,MACnDY,KADmD,GAC1Cb,GAD0C,CACnDa,KADmD;;AAE1D,+BAAaZ,GAAb,EAAkB,GAAlB,EAAsBY,KAAtB,EAA4B,IAA5B;AAEJ,CAJD;;AAMAhB,aAAaC,IAAb,CAAkB,QAAlB,EAA2BgB,+BAA3B,EAA+CC,uBAA/C,EAA4D,UAACf,GAAD,EAAKC,GAAL,EAAY;AAAA,MAC/De,OAD+D,GACpDhB,GADoD,CAC/DgB,OAD+D;;AAEtE,MAAMH,QAAQI,uBAAIC,IAAJ,CAASF,OAAT,EAAkBG,QAAQC,GAAR,CAAYC,UAA9B,CAAd;AACApB,MAAIqB,MAAJ,CAAW,eAAX,cAAsCT,KAAtC;AACMZ,MAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,aAAS,wBADU;AAEnBK;AAFmB,GAArB;AAIP,CARD;;QAaEnB,U,GAAAA,U;QACAG,Y,GAAAA,Y","file":"auth.js","sourcesContent":["import express from 'express';\r\nimport { user } from '../models/users';\r\nimport { validateUserEntry,validateUserEntryy,verifyToken,insertUser,validateUserSignIn,validateUserSignInn } from '../helpers/validators';\r\nimport { sendResponse } from '../helpers/responses';\r\nimport jwt from \"jsonwebtoken\"\r\nimport insertUsers from '../crud/db'\r\n\r\nconst authRouter = express.Router();\r\nconst authRouterv2 = express.Router();\r\n\r\n\r\nauthRouter.post('/signup', validateUserEntry, (req, res) => {\r\n  const { contactItem } = req;\r\n  user.users.push(contactItem);\r\n  res.status(200).send({\r\n    status: 200,\r\n    message: 'User successfully created',\r\n    contactItem,\r\n  });\r\n});\r\n\r\nauthRouter.post('/login', validateUserSignIn, (req, res) => {\r\n  const { accountDetails } = req;\r\n  res.status(200).send({\r\n    status: 200,\r\n    message: 'Successfully Signed In',\r\n    UserDetails: accountDetails,\r\n  });\r\n});\r\n\r\n\r\nauthRouterv2.post('/signup', validateUserEntryy, (req, res) => {\r\n     const {token} = req\r\n     sendResponse(res, 200,token,null)\r\n    \r\n});\r\n\r\nauthRouterv2.post('/login',validateUserSignInn,verifyToken, (req,res)=> {\r\n  const {payload} = req;\r\n  const token = jwt.sign(payload, process.env.SECRET_KEY);\r\n  res.header('Authorization', `Bearer ${token}`);\r\n        res.status(202).send({\r\n          message: 'successfully logged in',\r\n          token,\r\n        });\r\n});\r\n\r\n\r\n\r\nexport {\r\n  authRouter,\r\n  authRouterv2\r\n};\r\n"]}