{"version":3,"sources":["../../server/helpers/validators.js"],"names":["isPositiveInteger","test","s","filterInput","input","pattern","result","trimAllSpace","str","replace","validateUserEntry","req","res","next","body","email","firstName","lastName","password","contactItem","contact","trimFirstName","trimLastName","trimEmail","validator","isEmail","length","checkEmail","user","users","filter","userId","lastUserId","fullName","usersList","set","String","validateUserSignIn","accountDetails","createMessage","senderId","receiverId","subject","message","status","verifyUsersExist","verifyParentMessage","Message","messages","getParentMessage","parentMessageId","messageDetails","messageId","lastMessageId","createdOn","Date","mapMessages","createParentMessageId","lastParentMessageId"],"mappings":"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","file":"validators.js","sourcesContent":["import {user} from \"../models/users\";\r\nimport {usersList} from \"../models/users\";\r\nimport {mapMessages} from \"../models/messages\";\r\nimport {Message} from \"../models/messages\";\r\nimport {sendResponse} from \"./responses\";\r\nimport validator from \"validator\";\r\n\r\n\r\nconst isPositiveInteger = s => /^\\+?[1-9][\\d]*$/.test(s);\r\n\r\nconst filterInput = (input) => {\r\n\tconst pattern = /[~!#$%^&*()+={}:'\"<>?;',]/;\r\n    const result = pattern.test(input);\r\n    return result;\r\n};\r\n\r\nconst trimAllSpace = (str) =>{\r\n\treturn str.replace(/\\s+/g, \"\");\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst validateUserEntry = (req,res,next) => {\r\n\tconst {email,firstName,lastName,password} = req.body;\r\n\r\n\tconst contactItem = {contact : []};\t\r\n\tconst trimFirstName = trimAllSpace(firstName);\r\n\tconst trimLastName = trimAllSpace(lastName);\r\n\tconst trimEmail = trimAllSpace(email);\r\n\r\n\tif(validator.isEmail(email) && !filterInput(trimFirstName) && trimFirstName.length > 2\r\n        && !filterInput(trimLastName) && trimLastName.length > 2 &&\r\n\t\t!filterInput(trimEmail) && password.length>6){\r\n           let checkEmail = user.users.filter((result)=>{\r\n                  return result.email === email;\r\n           });    \r\n             if(checkEmail.length < 1){\r\n                    contactItem.userId = user.lastUserId + 1;\r\n                    user.lastUserId += 1;\r\n                    contactItem.firstName = trimFirstName;\r\n                    contactItem.lastName = trimLastName;\r\n                    contactItem.password = password;\r\n                    contactItem.email = email;\r\n                    contactItem.fullName = trimFirstName + \" \" + trimLastName;\r\n                    usersList.set(String(contactItem.userId), contactItem);\r\n                    req.contactItem = contactItem;\r\n                    next();\r\n             }else{\r\n                     sendResponse(res,400,null,\"email already exist.\");\r\n                }\r\n          \r\n\t}else{\r\n\t\tsendResponse(res,400,null,\"Ensure username, email and password are valid entries\");\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nconst validateUserSignIn = (req,res,next) => {\r\n    const {email, password} = req.body; \r\n    const trimEmail = trimAllSpace(email);\r\n    if(validator.isEmail(email) && !filterInput(trimEmail) && password.length>6){\r\n\r\n        const checkEmail = user.users.filter((result)=>{\r\n                  return result.email === email;\r\n           });\r\n\r\n        if(checkEmail.length > 0 && checkEmail[0].password === password){\r\n                    req.accountDetails = checkEmail[0];\r\n                    next();\r\n             }else{\r\n                 sendResponse(res,400,null,\"email and password is not associated with a registered account\");\r\n             }\r\n    }else{\r\n        sendResponse(res,400,null,\"Ensure email and password are valid entries\");\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nconst createMessage = (req,res,next) => {\r\n    const {senderId, receiverId, subject, message, status} = req.body;\r\n    // const senderId = 1;\r\n    // const receiverId =2;\r\n    const verifyUsersExist = user.users.filter((result)=>{\r\n        return (result.userId === senderId || result.userId === receiverId);\r\n    });\r\n\r\n    const verifyParentMessage = Message.messages.filter((result)=>{\r\n        return (result.senderId === senderId && result.receiverId === receiverId) || \r\n                (result.senderId === receiverId && result.receiverId === senderId);\r\n    });\r\n\r\n\r\n    if(verifyUsersExist.length > 1){\r\n            if(verifyParentMessage.length > 0){\r\n                 const getParentMessage = verifyParentMessage[0].parentMessageId;\r\n                 const messageDetails = {\r\n                             messageId : Message.lastMessageId + 1,\r\n                             senderId : senderId,\r\n                             receiverId : receiverId,\r\n                             parentMessageId : getParentMessage,\r\n                             subject : subject,\r\n                             message : message,\r\n                             status : status,\r\n                             createdOn : new Date()\r\n                 };\r\n                  Message.lastMessageId += 1;\r\n                  mapMessages.set(String(messageDetails.messageId),messageDetails);\r\n                  req.messageDetails = messageDetails;\r\n                  next();\r\n            }else{\r\n                        const createParentMessageId = Message.lastParentMessageId + 1;\r\n                        const messageDetails = {\r\n                                 messageId : Message.lastMessageId + 1,\r\n                                 senderId : senderId,\r\n                                 receiverId : receiverId,\r\n                                 parentMessageId : createParentMessageId,\r\n                                 subject : subject,\r\n                                 message : message,\r\n                                 status : status,\r\n                                 createdOn : new Date()\r\n                     };\r\n                       Message.lastMessageId += 1;\r\n                       Message.lastParentMessageId += 1;\r\n                       mapMessages.set(String(messageDetails.messageId),messageDetails);\r\n                      req.messageDetails = messageDetails;\r\n                      next();\r\n               }\r\n          }else{\r\n                sendResponse(res,401,null,\"one or more users is not registered\");\r\n       }\r\n    \r\n\r\n};\r\n\r\n// createMessage();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n\tisPositiveInteger,\r\n\tfilterInput,\r\n\ttrimAllSpace,\r\n\tvalidateUserEntry,\r\n    validateUserSignIn,\r\n    createMessage\r\n};"]}